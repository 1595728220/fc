1.使用属性绑定对无值属性也有效果
2.在vue中样式绑定时不能出现-号连字符，否则报错
3.Access to XMLHttpRequest at 'http://127.0.0.1:8081/user/login' from origin 'http://127.0.0.1:8080' has been blocked by CORS policy: Request header field content-type is not allowed by Access-Control-Allow-Headers in preflight response.
  这是因为我在后端设置跨域请求的时候没有所需的请求类型
  res.header("Access-Control-Allow-Headers", "Content-Type");
  上面代码需要加入允许的头部，content-type
4.使用porps实现父子间通信，将要提示的消息传给子组件myalert,并在子组件中监听消息数据的变化，变化时提示框显示
5.在vue中获取元素的宽度可以配合在标签属性ref="引用名",在实例中通过this.$refs.引用名就能获取到该元素对象，之后用获取宽高的方法获得宽高,要取到父组件中元素的宽度可使用this.$parent.$refs.引用名获取父组件中的元素对象
6.在使用axios访问后端时想携带cookie凭证需要在引入axios后加axios.defaults.withCredentials = true
7.通过标签进行路由跳转时可以在路由后面加/参数，需要配合跳转到的目标路由配置参数的接收/detail ---> /detail/:id，取值时使用this.$route.params.id取出跳转携带的参数
8.使用v-html无法对变量中的值的改变而重新渲染视图，尝试使用组件解决,使用子组件动态更新想要渲染的代码，只要父组件的中的数据发生变化，通过父与子间通信，将新值传入子组件，从而使视图改变
9.在进行表单验证状态和是否失去过焦点两者综合控制提交按钮的禁用状态的实现中，使用两个对象分别保存表单们的登录状态和是否失去过一次焦点。首先通过Object.values方法将我们的对象转化为数组，再将数组拼接，调用fliter方法挑出数组中的false值，如果结果数组长度不为0则禁用提交按钮
10.在分类信息的收集中，从数据库获取所有的描述词，并返回到前端，在前端中以classify属性，颜色，种水作为分类项，style属性为classify属性值对应的分类下的子项，再渲染到页面中，显示分类项为标题，子项为标题下的小按钮
11.webpack在处理动态名称模块名的时候，会直接将能识别的静态路径或者当前路径下所有子文件作为模块处理。如果require(变量)时无法识别静态路径，会报错误 Error: Cannot find module '../assets/imgs/banner/banner1.jpg',若直接require('../assets/imgs/banner/banner1.jpg')则能正常显示图片，所以在动态加载相对路径的图片时需要给定一个静态路径再通过变量拼接完整的图片路径，而不能直接传入一个变量，再在变量中保存完整的相对路径,若加载的是网络资源图片则可以通过img的src属性直接读取这个路径。
12.在修改data中的属性时，使用forEach遍历一个对象数组，数据的变化无法更新到视图，而换用map遍历时则可以更新视图，查看官网文档时发现用一个含有相同元素的数组去替换原来的数组是非常高效的操作，mark一下,但是在别的方法中就无法使用下标修改对应的数据，需改用forEach 对每个el使用this.$set(el,"属性名","属性值")来添加一个新的属性,isshow: (...)此时该属性就被监听了,被监听的属性就可以直接通过下标进行修改了
13.在myheader组件向兄弟组件传递用户的登录id时，考虑使用Vuex进行uid的管理,使用方式参考https://segmentfault.com/a/1190000015782272,主要使用this.$store获取Vuex对象,this.$store.getters.方法名 获取计算属性，this.$store.dispatch("方法名",新值)允许异步的修改值
14.前端保存的bool值传入后端时为字符串，使用！时需要注意，第一次会根据字符串是否为空作为判断依据转换为为bool,所以会失去原本的含义，需要进行内容的判断 比如 a === "true"
15.在做分页功能时，需要查询总记录数并获取分页信息，采用SELECT SQL_CALC_FOUND_ROWS  * FROM apps limit 2,6;
SELECT FOUND_ROWS();执行一次查询同时获得数据，该方法查询效率较低，并且需要在创建pool的时候开启多条查询语句的功能，设置multipleStatements: true,返回的结果为两个数组，
16.在产品页做产品的分类信息按钮时，由于保存的分类信息的大类名为对象的属性名，为英文显示，想把这个属性名转为中文，我考虑使用自定义的过滤去实现英文转为对应中文
17.在将请求用户登录状态的方法转移到vuex仓库中时，无法this.$axios报错，原因为即使已经在 main.js 中引入了 axios，并改写了原型链，也无法在 store.js 中直接使用 $ajax 命令，需要在Vuex中再次引入axios模块import axios from 'axios'
18.可以通过在组件中添加计算属性返回一个vuex仓库中的变量，并在之后监听该计算属性，就可以实现对vuex仓库中的变量进行监控
19.由于 JavaScript 的限制，Vue 不能检测以下变动的数组：当你利用索引直接设置一个项时，例如：vm.items[indexOfItem] = newValue,当你修改数组的长度时，例如：vm.items.length = newLength
20.移动端的对庄翡翠初步结构：
  home
    market //逛市场
        market_item //逛市场产品项
          detail_simple //产品详情简单查看
    goods //我的宝贝
      collect //我的收藏
        collect_item //收藏中的产品项
      glance //我的浏览
        glance_item //浏览过的产品项
    personal //个人中心
      profile //个人资料
      my_order //查看我的订单
        show_all //全部
        wait_pay //待付款
        wait_send //待发货
        wait_receive //待收货
        success //交易成功
        return //退款
    sort //分类
      keyword //通过关键词搜索
        search_item //查找得到的产品项
  order //收货地址和登录状态验证 通过点击购买商品后跳转
    add_addr //添加收货地址
    confirm_order //确认订单 
  product //产品列表
    product_item //产品列表项
  product_detail //产品详情
21.vuex中存储的数据再f5刷新后会初始化state导致数据丢失，解决的方法是使用别人封装的插件vuex-persistedstate，将要丢失的数据暂时保存在sessionStorage.
22.在移动端引入vue-lazyload 参考http://www.qiutianaimeili.com/html/page/2018/08/fmo2p56v6ms.html
23.在vuex中如果想在actions中发送axios请求，这时请求的参数如果时state中的数据时需要使用context.state.属性名获取，否则无法获取最新的属性值，造成错误，然后mutations 有一个固有参数 state，接收的是 Vuex 中的 state 对象，action 也有一个固有参数 context，但是 context 是 state 的父级，包含  state、getters





